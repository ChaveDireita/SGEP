@model IEnumerable<SGEP.Models.Projeto>

@{
    ViewData["Title"] = "Index";
    ViewData["search-fields"] = "_Projeto";
    ViewData["role-allowed-to-modify"] = "Almoxarife";
}
<br />
@await Html.PartialAsync("Partial/Index/_AlertContainer")
<br />
<h2>Projetos</h2>
<br />
@await Html.PartialAsync("Partial/Index/Button/_CRUD", ViewData)
@await Html.PartialAsync("Partial/Index/_LoadingInfo")
<div class="float-right d-inline">
    @await Html.PartialAsync("Partial/Index/Button/_SearchButtons")
    <button id="btn-del"
            class="btn btn-outline-danger squareborder"
            title="Finalizar"
            onclick="
            const btns = gets.cls('delete');
            for(btn of btns)
                btn.hidden = !btn.hidden;
            ">
        <i class="fas fa-calendar-check"></i>
    </button>
</div>
<br />
<div class="container row justify-content-center">
    @await Html.PartialAsync("Partial/Index/Search/_Search", null, ViewData)
</div>
<br />

@await Html.PartialAsync("_Create")
@await Html.PartialAsync("_Edit")
@await Html.PartialAsync("_End")

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inicio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fim)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="lista"></tbody>
</table>

@await Html.PartialAsync("_Details")

@section Scripts
    {
    <script>
        const lista = document.getElementById('lista');
        const controller = 'Projeto';

        list({});

        function finalize(id) {
            loading.show();
            fetch('/' + controller + '/Get/' + id)
                .then(res => res.json())
                .then(json => {
                    const id = get.id('Id-end');
                    const title = get.id('modal-end-title');
                    const inicio = get.id('Inicio-end');
                    const fim = get.id('Fim-end');
                    const almoxarifado = get.id('Almoxarifado-end');

                    title.innerText = 'Finalizar ' + json.nome;
                    id.value = json.id;
                    inicio.value = json.inicio;
                    fim.value = json.end;
                    almoxarifado.value = json.almoxarifadoId;
                    $('#modal-end').modal('show');
                    loading.hide();
                });
        }

        function list(searchParams) {
            refreshTable(controller, searchParams, ['id', 'nome', 'inicio', 'fim', 'end-btn'], ({ size, entities }) => {
                pagination.size = size;
                entities.forEach(p => 
                {
                    const condition1 = p.fim == '--';
                    const condition2 = p.almoxarifado.almoxarifadosxMateriais.length == 0;
                    const condition = condition1 && condition2;
                    p['end-btn'] = condition ? '<a class="txt-danger float-right delete text-danger" href="#" + onclick="finalize(' + p.id + ')" hidden="true"><i class="fas fa-check-circle" style="font-size: 18px"></i></a>' : 
                                   condition2 ?  ''
                                              : '<i class="delete text-secondary fas fa-check-circle float-right" title="Consuma ou transfira todos os materiais deste projeto antes de finalizá-lo" hidden="true" style="font-size: 18px"></i>';
                    p.fim = condition ? '--'
                        : p.fim;
                })
            });
        }

        function onClickSelectRow(id) {
            selectRow(id, () => {
                loading.show();
                fetch('/' + controller + '/Get/' + id)
                    .then(res => res.json())
                    .then(proj => {
                        const idField = get.id('Id-edit');
                        const nomeField = get.id('Nome-edit');
                        const inicioField = get.id('Inicio-edit');
                        const fimField = get.id('Fim-edit');
                        const almoxarifado = get.id('Almoxarifado-edit');
                        const fimGroup = get.id('Fim-edit-group');

                        idField.value = proj.id;
                        nomeField.value = proj.nome;
                        inicioField.value = proj.inicio.slice(0, 10);
                        almoxarifado.value = proj.almoxarifadoId;
                        fimGroup.hidden = proj.fim == null;
                        fimField.value = proj.fim ? proj.fim.slice(0, 10) : null;
                        $('#modal-edit').modal('show');
                        loading.hide();
                    });
            }, () => showdetailsmodal(id));
        }

        function showdetailsmodal(id) {
            loading.show();
            atualizaralocacao(id);
            fetch('/' + controller + '/ProjetoSelecionado/?id=' + id).then((res) => res.json()).then(proj => {
                var detailstable = document.getElementById('detailstable');
                var nomes = ['ID', 'Nome', 'Início', 'Fim'];
                var content = [proj.id, proj.nome, proj.inicio, proj.fim];
                detailstable.innerHTML = gerardetailslist(nomes, content);
                loading.hide();
            });
            const abrirAlocacaoBtn = document.getElementById('abriralocacao');
            if (abrirAlocacaoBtn)
                abrirAlocacaoBtn.onclick = function () {
                    gerartabelas(id);
                    $('#alocacaomodal').modal('toggle');
                    $('#detailsmodal').modal('toggle');
                }
            $('#detailsmodal').modal('toggle');
        }

        function atualizaralocacao(id) {
            fetch('/' + controller + '/FuncionarioNomes').then((res) => res.json()).then(nomes => {
                fetch('/' + controller + '/FuncionariosAlocados/?id=' + id).then((res) => res.json()).then(lista => {
                    var tabela = document.getElementById('tableidd');
                    tabela.innerHTML = gerarlist(nomes, lista);
                });
            });
        }

        var alocadostab = document.getElementById('tabelaalocados');
        var nalocadostab = document.getElementById('tabelanaoalocados');
        function gerartabelas(id) {
            console.log(id);
            fetch('/' + controller + '/FuncionarioNomes').then((res) => res.json()).then(nomes => {
                fetch('/' + controller + '/FuncionariosAlocados/?id=' + id).then((res) => res.json()).then(func => {
                    alocadostab.innerHTML = gerarlist(nomes, func, 'desalocar', id, ['selectable']);
                });
                fetch('/' + controller + '/FuncionariosNaoAlocados/?id=' + id).then((res) => res.json()).then(func => {
                    nalocadostab.innerHTML = gerarlist(nomes, func, 'alocar', id, ['selectable']);
                });
            });
        }
        function alocar(funid, projid) {
            const data = new FormData();
            data.append('IdFuncionario', funid);
            data.append('IdProjeto', projid);
            fetch('/' + controller + '/AlocarFuncionario', { method: 'POST', body: data }).then(retorno => {
                gerartabelas(projid);
            });
            atualizaralocacao(projid);
        }
        function desalocar(funid, projid) {
            fetch('/' + controller + '/DesalocarProjeto?idfunc=' + funid + '&idproj=' + projid, { method: 'POST' }).then(retorno => {
                gerartabelas(projid);
            });
            atualizaralocacao(projid);
        }
        function alocardismiss() {
            $('#alocacaomodal').modal('toggle');
            $('#detailsmodal').modal('toggle');
        }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("Partial/Index/_Forms");}
    <script>
        lock.end = true;

        $('#form-end').submit(function (e) {
            e.preventDefault()
            if ($(this).valid() && lock.end) {
                lock.end = false;
                loading.show();
                var color = 'success';
                fetch('/' + controller + '/Finalizar', {
                    method: 'post',
                    body: new FormData(document.querySelector('#form-end'))
                })
                .then(res => {
                    color = res.ok ? 'success' : 'danger';
                    return res.text()
                })
                .then(text => 
                {
                    $('#modal-end').modal('hide');
                    get.id ('form-end').reset();
                    list({});
                    showAlert(text, color);
                    loading.hide();
                    lock.end = true;
                });
            }
        });

    </script>
}
