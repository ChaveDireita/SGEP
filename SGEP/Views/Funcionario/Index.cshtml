@model IEnumerable<SGEP.Models.Funcionario>

@{
    ViewData["Title"] = "Index";
    ViewData["search-fields"] = "_Funcionario";
    ViewData["role-allowed-to-modify"] = "Almoxarife";
}
<br />
<div id="alert-container">
    
</div>
<br />
<h2>Funcionários</h2>
<br />
@await Html.PartialAsync("Partial/Index/Button/_CRUD", ViewData)

<div class="float-right d-inline">
    @await Html.PartialAsync("Partial/Index/Button/_SearchButtons")
    <button id="btn-del" 
            class="btn btn-outline-danger squareborder" 
            onclick="toggleDelete()"
            title="Remover"><i class="fas fa-trash"></i></button>
</div>
<br/>
<div class="container row justify-content-center">
    @await Html.PartialAsync("Partial/Index/Search/_Search", null, ViewData)
</div>
<br/>

@await Html.PartialAsync("_Create")
@await Html.PartialAsync("_Edit")

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Matricula)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cargo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="lista">
    </tbody>
</table>

@await Html.PartialAsync("_Details")

@section Scripts
{
    <script>
        const lista = document.getElementById('lista');
        const checkDel = document.getElementById('checkDel');
        const controller = 'Funcionario';

        list({});

        function list(searchParams)
        {
            refreshTable(controller, searchParams, ['matricula', 'nome', 'cargo', 'delete-btn'], ({size, entities}) => 
            {
                pagination.size = size;
                entities.forEach(f => 
                {
                    f['delete-btn'] = f['ativo'] ? '<a class="txt-danger float-right delete text-danger" href="#" + onclick="remove(' + f.id + ')" hidden="true"><i class="fas fa-minus-circle" style="font-size: 18px"></i></a>'
                                                 : 'Removido';
                });
            });
        }

        function remove(id)
        {
            http.POST('/' + controller + '/Delete/' + id, () => 
            {
                $('#edit').attr('disabled', true);
                $('#edit').on('click', () => 
                {
                });
                $('#details').attr('disabled', true);
                $('#details').on('click', () => 
                {
                });
                list({})
            })
        }
        
        function getAll(id, nome, cargo)
        {
            lista.innerHTML = '<tr><td colspan=4 class="reloading"><i class="fas fa-sync reloading"></i></td></tr>';
            fetch('/' + controller + '/List/?id=' + id + '&nome=' + nome + '&cargo=' + cargo)
            .then((res) => res.json())
            .then((json) => 
            {
                lista.innerHTML = '';
                for(const f of json)
                {
                    var tr = document.createElement("tr");
                    tr.id = f.id
                    tr.className = "selectable loading";
                    tr.onclick = function () { selectRow(f) };
                    tr.innerHTML = '';
                    tr.innerHTML = '<td>' +
                        f.id +
                        '</td>' +
                        '<td>' +
                        f.nome +
                        '</td>' +
                        '<td>' +
                        f.cargo +
                        '</td>' +
                        '<td>' +
                        '<a class="txt-danger float-right delete text-danger" href="#" + onclick="remove(' + f.id + ')" hidden="true"><i class="fas fa-minus-circle" style="font-size: 18px"></i></a>' +
                        '</td>';
                    lista.appendChild(tr);
                }
            });
        }

        function toggleDelete()
        {
            const btnDels = document.getElementsByClassName('delete');
            const checkDel = document.getElementById('checkDel');
            for(const btn of btnDels)
                btn.hidden = !btn.hidden;
        }

        function onClickSelectRow (id)
        {
            selectRow(id, 
            () => 
            {
                fetch('/' + controller + '/Get/' + id)
                .then(res => res.json())
                .then(func => 
                {
                    const idField = get.id('Id-edit');
                    const nomeField = get.id('Nome-edit');
                    const cargoField = get.id('Cargo-edit');
                    const ativoField = get.id('Ativo-edit');
                    const matField = get.id('Matricula-edit');
                    idField.value = func.id;
                    nomeField.value = func.nome;
                    cargoField.value = func.cargo;
                    ativoField.value = func.ativo;
                    matField.value = func.matricula;
                    $('#modal-edit').modal('show');
                });
            },
            () => 
            {
                fetch('/' + controller + '/Get/' + id)
                .then(res => res.json())
                .then(func => 
                {
                    var idfield = document.getElementById('idfield');
                    idfield.innerText = "FUN - " + func.id;
                    var namefield = document.getElementById('namefield');
                    namefield.textContent = func.nome;
                    var cargofield = document.getElementById('cargofield');
                    cargofield.textContent = func.cargo;
                    gerarlista(id);
                    $('#detailsmodal').modal('toggle');
                });
            });
        }
        function gerarlista(id)
        {
            fetch('/' + controller + '/ProjetosAssociados/?id=' + id).then((res) => res.json())
                .then((json) => {
                    var theadr = document.getElementById('theadr');
                    theadr.innerHTML = '';
                    theadr.innerHTML = '<th>' +
                        json.id +
                        '</th >' +
                        '<th>' +
                        json.nome +
                        '</th>' +
                        '<th>' +
                        json.inicio +
                        '</th>' +
                        '<th>' +
                        json.fim +
                        '</th>';
                    var tbody = document.getElementById('projlista');
                    tbody.innerHTML = '';
                    for (const p of json) {
                        tbody.innerHTML += '<tr>' +
                            '<td>' +
                            p.id +
                            '</td>' +
                            '<td>' +
                            p.nome +
                            '</td>' +
                            '<td>' +
                            p.inicio +
                            '</td>' +
                            '<td>' +
                            p.fim +
                            '</td>' +
                            '</tr>';
                    }
                });
        }

        function willFail()
        {
            var color = 'success';
            fetch('/Funcionario/WillFail')
            .then(res => {
                color = res.ok ? 'success' : 'danger';
                return res.text();
            })
            .then(text => showAlert(text, color))
        }

    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @{await Html.RenderPartialAsync("Partial/Index/_Forms");}
}

