@model IEnumerable<SGEP.Models.Funcionario>


@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create" data-toggle="modal" data-target="#modal-create">Create New</a>
</p>

@await Html.PartialAsync("_Create", new Funcionario())

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cargo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cargo)
                </td>
                <td>
                    <a  asp-action="_Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $('#form-create').submit(function (e) {
            e.preventDefault()
            if ($(this).valid()) {
                fetch('/Funcionario/Create', {
                    method: 'post',
                    body: new FormData(document.querySelector('#form-create'))
                })
                .then(res => res.text())
                .then(_ => 
                {
                    $('#modal-create').modal('hide');
                });
            }
        });

        
    </script>
}
