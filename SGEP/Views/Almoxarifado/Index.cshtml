@model IEnumerable<SGEP.Models.Almoxarifado>

@{
    ViewData["Title"] = "Index";
    ViewData["search-fields"] = "_Almoxarifado";
    ViewData["role-allowed-to-modify"] = "Almoxarife";
}
<br />
@await Html.PartialAsync("Partial/Index/_AlertContainer")
<br />
<h2>Estoque</h2>
<br />
@await Html.PartialAsync("Partial/Index/Button/_CRUD", ViewData)
@await Html.PartialAsync("Partial/Index/_LoadingInfo")
<div class="float-right d-inline">
    @await Html.PartialAsync("Partial/Index/Button/_SearchButtons")
    <button id="btn-del" 
            class="btn btn-outline-danger squareborder" 
            onclick="toggleDelete()"
            title="Ativar/Desativar"><i class="fas fa-power-off"></i></button>
</div>
<br/>
<div class="container row justify-content-center">
    @await Html.PartialAsync("Partial/Index/Search/_Search", null, ViewData)
</div>
<br/>


@await Html.PartialAsync("_Create")
@await Html.PartialAsync("_Edit")

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="lista">
    </tbody>
</table>

@await Html.PartialAsync("_Details")

@section Scripts
{
    <script>
        const lista = document.getElementById('lista');
        const checkDel = document.getElementById('checkDel');
        const controller = 'Almoxarifado';

        list(_search());

        function list(searchParams)
        {
            refreshTable(controller, searchParams, ['id', 'nome', 'delete-btn'], ({size, entities}) => 
            {
                pagination.size = size;
                entities.forEach(a => {
                    if (a.projeto)
                        a.nome += ' <span class="badge badge-info">Projeto</span>';
                    else 
                        a.nome += ' <span class="badge badge-info">Almoxarifado</span>'
                    if (!a.ativo)
                        a.nome += ' <span class="badge badge-danger">Desativado</span>';
                    if (!a.projeto && a.almoxarifadosxMateriais.length == 0)
                        a['delete-btn'] = (a.ativo) ? '<a class="txt-danger float-right delete text-danger" href="#" + onclick="remove(' + a.id + ')" hidden="true"><i class="fas fa-power-off" style="font-size: 18px"></i></a>' 
                                                    : '<a class="txt-danger float-right delete text-success" href="#" + onclick="remove(' + a.id + ')" hidden="true"><i class="fas fa-power-off" style="font-size: 18px"></i></a>';   
                    else
                        a['delete-btn'] = '';
                });
            });
        }

        function remove(id)
        {
            http.POST('/' + controller + '/Toggle/' + id, () => 
            {
                $('#edit').attr('disabled', true);
                $('#edit').on('click', () => 
                {
                });
                $('#details').attr('disabled', true);
                $('#details').on('click', () => 
                {
                });
                list(_search())
            })
        }
        
        function getAll(id, nome, projeto)
        {
            lista.innerHTML = '<tr><td colspan=4 class="reloading"><i class="fas fa-sync reloading"></i></td></tr>';
            fetch('/' + controller + '/List/?id=' + id + '&nome=' + nome + '&projeto=' + projeto)
            .then((res) => res.json())
            .then((json) => 
            {
                lista.innerHTML = '';
                for(const a of json)
                {
                    var tr = document.createElement("tr");
                    tr.id = a.id
                    tr.className = "selectable loading";
                    tr.onclick = function () { selectRow(a) };
                    tr.innerHTML = '';
                    tr.innerHTML = '<td>' +
                        a.id +
                        '</td>' +
                        '<td>' +
                        a.nome +
                        '</td>';
                    lista.appendChild(tr);
                }
            });
        }

        function toggleDelete()
        {
            const btnDels = document.getElementsByClassName('delete');
            const checkDel = document.getElementById('checkDel');
            for(const btn of btnDels)
                btn.hidden = !btn.hidden;
        }

        function onClickSelectRow (id)
        {
            selectRow(id, 
            () => 
            {
                loading.show();
                fetch('/' + controller + '/Get/' + id)
                .then(res => res.json())
                .then(a => 
                {
                    console.log(a);
                    const idField = get.id('Id-edit');
                    const nomeField = get.id('Nome-edit');
                    const projetoField = get.id('Projeto-edit');
                    const ativoField = get.id('Ativo-edit');
                    const btnDisable = get.id('btn_save_edit')
                    idField.value = a.id;
                    nomeField.value = a.nome;
                    projetoField.value = a.projeto;
                    ativoField.value = a.ativo;
                    
                    if (a.projeto)
                    {
                        nomeField.disabled = true;
                        nomeField.title = 'Projetos podem ser alterados na pÃ¡gina "Projetos".';
                        btnDisable.disabled = true
                    } else 
                    {
                        nomeField.disabled = false;
                        nomeField.title = '';
                        btnDisable.disabled = false;
                    }
                    $('#modal-edit').modal('show'); 
                    loading.hide();
                });
            },
            () => 
            {
                loading.show();
                fetch('/' + controller + '/Get/' + id)
                .then(res => res.json())
                .then(alm => 
                {
                    var detailstable = document.getElementById('detailstable');
                    var nomes = ['ID', 'Nome'];
                    var content = [alm.id, alm.nome];
                    detailstable.innerHTML = gerardetailslist(nomes, content);
                    gerarlista(alm.id)
                    $('#detailsmodal').modal('toggle');

                    loading.hide();
                });
            });
        }

        function gerarlista(id)
        {
            fetch('/' + controller + '/GetMaterialxAlmoxarifadoList/?id=' + id).then((res) => res.json())
                .then((json) => {
                    var tbody = document.getElementById('matlista');
                    tbody.innerHTML = '';
                    for (const am of json) {
                        tbody.innerHTML += `
                            <tr>
                                <td class="text-break">${am.showid}</td>
                                <td class="text-break">${am.descricao}</td>
                                <td class="text-break">${am.quantidadeTotal}</td>
                                <td class="text-break">${am.precoUnidade}</td>
                            </tr>
                        `;
                    }
                });
        }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @{await Html.RenderPartialAsync("Partial/Index/_Forms");}
}

