@model IEnumerable<SGEP.Models.Movimentacao>

@{
    ViewData["Title"] = "Index";
    ViewData["search-fields"] = "_Movimentacao";
}
<br />
<h2>Movimentações</h2>
<br />
<div class="btn-group">
  <button type="button" class="btn btn-success dropdown-toggle squareborder" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    <i class="fas fa-plus"></i> Adicionar Movimentação
  </button>
  <div class="dropdown-menu">
    <a class="dropdown-item" 
       href="#" 
       data-toggle="modal" 
       data-target="#modal-create-in" 
       onclick="
            const selectDest = get.id('Destino-in');
            selectDest.innerHTML = '<option>carregando dados...</option>';
            selectDest.disabled = true;
            fetch('/Almoxarifado/All')
            .then((res) => res.json())
            .then((json) => 
            {
                selectDest.innerHTML = '<option disabled selected>Selecione o destino</option>';
                console.log (json);
                for(alm of json)
                {
                    const opt = document.createElement('option');
                    opt.value = alm.id;
                    opt.innerText = alm.nome;
                    selectDest.appendChild(opt);
                }
                selectDest.disabled = false;
            });
            const selectMat = get.id('Material-in');
            selectMat.innerHTML = '<option>carregando dados...</option>';
            selectMat.disabled = true;
            fetch('/Material/All')
            .then((res) => res.json())
            .then((json) => 
            {
                selectMat.innerHTML = '<option disabled selected>Selecione o material</option>';;
                console.log (json);
                for(mat of json)
                {
                    const opt = document.createElement('option');
                    opt.value = mat.id;
                    opt.innerText = mat.id;
                    opt.title = mat.descricao;
                    selectMat.appendChild(opt);
                }
                selectMat.disabled = false;
            });
            ">Entrada</a>
    <a class="dropdown-item" 
       href="#" 
       data-toggle="modal" 
       data-target="#modal-create-out"
       onclick="
            const selectOrig = get.id('Origem-out');
            selectOrig.innerHTML = '<option>carregando dados...</option>';
            selectOrig.disabled = true;
            fetch('/Almoxarifado/All')
            .then((res) => res.json())
            .then((json) => 
            {
                selectOrig.innerHTML = '<option disabled selected>Selecione a origem</option>';
                console.log (json);
                for(alm of json)
                {
                    const opt = document.createElement('option');
                    opt.value = alm.id;
                    opt.innerText = alm.nome;
                    selectOrig.appendChild(opt);
                }
                selectOrig.disabled = false;
            });
       " >Saída</a>
    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#modal-create-diff">Sobra (?)</a>
  </div>
</div>
<button id="details" 
        class="btn btn-outline-secondary squareborder" 
        disabled><i class="fas fa-info"></i> Detalhes</button>
<div class="float-right d-inline">
    @await Html.PartialAsync("Partial/Index/Button/_SearchButtons")
</div>
<br/>
<div class="container row justify-content-center">
    @await Html.PartialAsync("Partial/Index/Search/_Search", null, ViewData)
</div>
@await Html.PartialAsync("_Create")
<br/>
<table class="table">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Data)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaterialId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tipo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Origem)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Destino)
            </th>
        </tr>
    </thead>
    <tbody id="lista">
    </tbody>
</table>

@section Scripts
{
    <script>
        const lista = document.getElementById('lista');
        const controller = 'Movimentacao';

        list({});

        function list(searchParams)
        {
            refreshTable(controller, searchParams, ['data', 'materialId', 'tipo', 'origem', 'destino'], ({size}) => pagination.size = size);
        }

        function onClickSelectRow (id)
        {
            selectRow(id, () => 
            {
                //Código do modal
            },
            () => 
            {
                //Código do modal
            });
        }
    </script>
}